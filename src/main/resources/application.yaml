server:
  port: ${SPRING_SERVER_PORT:9080}
  servlet:
    context-path: /
    application-display-name: ${spring.application.name}
spring:
  datasource:
    url: jdbc:postgresql://${SPRING_POSTGRES_HOST:localhost}:${SPRING_POSTGRES_PORT:5432}/${SPRING_POSTGRES_DB:dicegame}
    username: ${SPRING_POSTGRES_USER:postgres}
    password: ${SPRING_POSTGRES_PASSWORD:1234}
    hikari:
      minimum-idle: 10
      maximum-pool-size: 30
      idle-timeout: 30000
      pool-name: HikariPool-dicegame
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: subscription-status-consumer-group
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  flyway:
    enabled: true
    url: jdbc:postgresql://${SPRING_POSTGRES_HOST:localhost}:${SPRING_POSTGRES_PORT:5432}/${SPRING_POSTGRES_DB:dicegame}
    user: ${SPRING_POSTGRES_USER:postgres}
    password: ${SPRING_POSTGRES_PASSWORD:1234}
    baseline-on-migrate: true
    locations: classpath:db/migration
    repair-on-migrate: true
    out-of-order: true
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    password: ${SPRING_REDIS_PASSWORD:}
    connect-timeout: 2s
redisson:
  config: |
    singleServerConfig:
      address: "redis://127.0.0.1:6379"
      connectionPoolSize: 16
      connectionMinimumIdleSize: 4
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

logging:
  level:
    root: INFO
    com.example.dicegame: DEBUG
    org.hibernate.SQL: DEBUG
    org.springframework.jdbc.core.JdbcTemplate: DEBUG

app:
  target-score: 25 # default
  prize-score: 100

kafka:
  topics:
    prize-topic: prize-topic

feign:
  client:
    roll-dice:
      url: http://localhost:8080